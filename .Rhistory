## sd of shares
sd(data_channel_train$shares)
## creates a new column that is if shares is higher than average or not
shareshigh <- data_channel_train %>% select(shares) %>% mutate (shareshigh = (shares> mean(shares)))
## creates a contingency table of shareshigh and whether it is the weekend
table(shareshigh$shareshigh, data_channel_train$Weekend)
## creates  a contingency table of shareshigh and whether it is monday
table(shareshigh$shareshigh, data_channel_train$Mon)
View(data_channel_train)
## mean of shares
mean(data_channel_train$shares)
## sd of shares
sd(data_channel_train$shares)
## mean of shares
mean(data_channel_train$shares)
## sd of shares
sd(data_channel_train$shares)
## creates a new column that is if shares is higher than average or not
shareshigh <- data_channel_train %>% select(shares) %>% mutate (shareshigh = (shares> mean(shares)))
## create a new column that combines Mon-Fri into weekdays
Weekday <- mutate(data_channel_train,
Weekday = ifelse(Mon == 1 |
Tues ==1 |
Wed == 1 |
Thurs == 1 |
Fri == 1,
'Weekday', 'Weekend'))
## creates a contingency table of shareshigh and whether it is the weekend
table(shareshigh$shareshigh, data_channel_train$Weekend)
## creates  a contingency table of shareshigh and whether it is monday
table(shareshigh$shareshigh, data_channel_train$Mon)
View(Weekday)
## mean of shares
mean(data_channel_train$shares)
## sd of shares
sd(data_channel_train$shares)
## creates a new column that is if shares is higher than average or not
shareshigh <- data_channel_train %>% select(shares) %>% mutate (shareshigh = (shares> mean(shares)))
## create a new column that combines Mon-Fri into weekdays
Weekday <- mutate(data_channel_train,
Weekday = ifelse(Mon == 1 |
Tues ==1 |
Wed == 1 |
Thurs == 1 |
Fri == 1,
'Weekday', 'Weekend'))
## creates a contingency table of shareshigh and whether it is the weekend
table(shareshigh$shareshigh, shareshigh$Weekday)
## creates a contingency table of shareshigh and whether it is the weekend
table(shareshigh$shareshigh, Weekday$Weekday)
## creates  a contingency table of shareshigh and whether it is monday
table(Weekday$Weekday, data_channel_train$Weekend)
Weekday <- transmutate(Weekday,
Mon = ifelse(Mon == 1, 'Mon', 'Not Mon'
),
Tues = ifelse(Tues == 1, 'Tues', 'Not
Tues'),
Wed = ifelse(Wed == 1, 'Wed', 'Not
Wed'),
Thurs = ifelse(Thurs == 1, 'Thurs','Not
Thurs'),
Fri = ifelse(Fri == 1, 'Fri', 'Not
Fri'),
)
Weekday <- transmute(Weekday,
Mon = ifelse(Mon == 1, 'Mon', 'Not Mon'
),
Tues = ifelse(Tues == 1, 'Tues', 'Not
Tues'),
Wed = ifelse(Wed == 1, 'Wed', 'Not
Wed'),
Thurs = ifelse(Thurs == 1, 'Thurs','Not
Thurs'),
Fri = ifelse(Fri == 1, 'Fri', 'Not
Fri'),
)
View(Weekday)
## mean of shares
mean(data_channel_train$shares)
## sd of shares
sd(data_channel_train$shares)
## creates a new column that is if shares is higher than average or not
shareshigh <- data_channel_train %>% select(shares) %>% mutate (shareshigh = (shares> mean(shares)))
## create a new column that combines Mon-Fri into weekdays
Weekday <- mutate(data_channel_train,
Weekday = ifelse(Mon == 1 |
Tues ==1 |
Wed == 1 |
Thurs == 1 |
Fri == 1,
'Weekday', 'Weekend'))
Days_of_Week <- transmute(Weekday,
Mon = ifelse(Mon == 1,
'Mon', 'Not Mon'),
Tues = ifelse(Tues == 1,
'Tues', 'Not Tues'),
Wed = ifelse(Wed == 1,
'Wed', 'Not Wed'),
Thurs = ifelse(Thurs == 1,
'Thurs','Not Thurs'),
Fri = ifelse(Fri == 1,
'Fri', 'Not Fri'))
View(Days_of_Week)
Weekday <- mutate(Weekday,
Day_of_week = ifelse(Mon == 1, 'Mon', 0))
View(Weekday)
print(Weekday$Day_of_week)
Weekday <- mutate(Weekday, Day_of_Week =
ifelse(Tues ==1 &  Mon != 'Mon',
'Tues', 0))
print(Weekday$Day_of_week)
## create a new column that combines Mon-Fri into weekdays
Weekday <- mutate(data_channel_train,
Weekday = ifelse(Mon == 1 |
Tues ==1 |
Wed == 1 |
Thurs == 1 |
Fri == 1,
'Weekday', 'Weekend'))
Weekday <- mutate(Weekday,
Day_of_week = ifelse(Mon == 1, 'Mon', 0))
Weekday <- mutate(Weekday, Day_of_Week =
ifelse(Tues ==1 &  Day_of_Week != 'Mon',
'Tues', 0))
Weekday <- mutate(Weekday, Day_of_week =
ifelse(Tues ==1 &  Day_of_week != 'Mon',
'Tues', 0))
## create a new column that combines Mon-Fri into weekdays
Weekday <- mutate(data_channel_train,
Weekday = ifelse(Mon == 1 |
Tues ==1 |
Wed == 1 |
Thurs == 1 |
Fri == 1,
'Weekday', 'Weekend'))
Weekday <- mutate(Weekday,
Days_of_Week = ifelse(Mon == 1 &
Weekday == 'Weekday', 'Mon',
ifelse(Tues == 1  &
Weekday == "Weekday", 'Tues',
ifelse(Wed == 1 &
Weekday == "Weekday", 'Wed',
ifelse(Thurs ==1 &
Weekday == 'Weekday', 'Thurs',
ifelse(Fri == 1 &
Weekday == 'Weekday',
'Fri', 'Weekdend'))))))
print(Weekday$Days_of_Week)
## creates  a contingency table of shareshigh and whether it is monday
table(Weekday$Days_of_Week)
## creates  a contingency table of shareshigh and whether it is monday
table(Weekday$Days_of_Week, shareshigh$shareshigh)
## create a new column that combines Mon-Fri into weekdays
Weekday <- mutate(data_channel_train,
Weekday = ifelse(Mon == 1 |
Tues ==1 |
Wed == 1 |
Thurs == 1 |
Fri == 1,
'Weekday', 'Weekend'))
Weekday <- mutate(Weekday,
Days_of_Week = ifelse(Mon == 1 &
Weekday == 'Weekday', 'Mon',
ifelse(Tues == 1  &
Weekday == "Weekday", 'Tues',
ifelse(Wed == 1 &
Weekday == "Weekday", 'Wed',
ifelse(Thurs ==1 &
Weekday == 'Weekday', 'Thurs',
ifelse(Fri == 1 &
Weekday == 'Weekday',
'Fri', 'Weekend'))))))
## creates a contingency table of shareshigh and whether it is a weekday
table(shareshigh$shareshigh, Weekday$Weekday)
## creates  a contingency table of shareshigh and whether it is monday
table(Weekday$Days_of_Week, shareshigh$shareshigh)
## creates  a contingency table of shareshigh and whether it is monday
c <- table(Weekday$Days_of_Week, shareshigh$shareshigh)
prop.table(c, margin=1)
addmargins(prop.table(c, margin=1))
prop.table(c, margin=1)
## creates a contingency table of shareshigh and whether it is a weekday
prop.table(table(shareshigh$shareshigh, Weekday$Weekday))
## creates  a contingency table of shareshigh and whether it is monday
prop.table(table(Weekday$Days_of_Week, shareshigh$shareshigh))
Weekday$Days_of_Week <- ordered(Weekday$Days_of_Week,
levels=c("Mon", "Tues",
"Wedn", "Thurs",
"Fri", "Weekend"))
## creates  a contingency table of shareshigh and whether it is monday
prop.table(table(Weekday$Days_of_Week, shareshigh$shareshigh))
## create a new column that combines Mon-Fri into weekdays
Weekday <- mutate(data_channel_train,
Weekday = ifelse(Mon == 1 |
Tues ==1 |
Wed == 1 |
Thurs == 1 |
Fri == 1,
'Weekday', 'Weekend'))
Weekday <- mutate(Weekday,
Days_of_Week = ifelse(Mon == 1 &
Weekday == 'Weekday', 'Mon',
ifelse(Tues == 1  &
Weekday == "Weekday", 'Tues',
ifelse(Wed == 1 &
Weekday == "Weekday", 'Wed',
ifelse(Thurs ==1 &
Weekday == 'Weekday', 'Thurs',
ifelse(Fri == 1 &
Weekday == 'Weekday',
'Fri', 'Weekend'))))))
Weekday$Days_of_Week <- ordered(Weekday$Days_of_Week,
levels=c("Mon", "Tues",
"Wed", "Thurs",
"Fri", "Weekend"))
## creates  a contingency table of shareshigh and whether it is monday
prop.table(table(Weekday$Days_of_Week, shareshigh$shareshigh))
## create a new column that combines Mon-Fri into weekdays
Weekday <- mutate(data_channel_train,
Weekday = ifelse(Mon == 1 |
Tues ==1 |
Wed == 1 |
Thurs == 1 |
Fri == 1,
'Weekday', 'Weekend'))
Weekday <- mutate(Weekday,
Days_of_Week = ifelse(Mon == 1 &
Weekday == 'Weekday', 'Mon',
ifelse(Tues == 1  &
Weekday == "Weekday", 'Tues',
ifelse(Wed == 1 &
Weekday == "Weekday", 'Wed',
ifelse(Thurs ==1 &
Weekday == 'Weekday', 'Thurs',
ifelse(Fri == 1 &
Weekday == 'Weekday',
'Fri', 'Weekend'))))))
## creates  a contingency table of shareshigh and whether it is monday
prop.table(table(Weekday$Days_of_Week, shareshigh$shareshigh))
## mean of shares
mean(data_channel_train$shares)
## sd of shares
sd(data_channel_train$shares)
## creates a new column that is if shares is higher than average or not
shareshigh <- data_channel_train %>% select(shares) %>% mutate (shareshigh = (shares> mean(shares)))
## create a new column that combines Mon-Fri into weekdays
Weekday <- mutate(data_channel_train,
Weekday = ifelse(Mon == 1 |
Tues ==1 |
Wed == 1 |
Thurs == 1 |
Fri == 1,
'Weekday', 'Weekend'))
Weekday <- mutate(Weekday,
Days_of_Week = ifelse(Mon == 1 &
Weekday == 'Weekday', 'Mon',
ifelse(Tues == 1  &
Weekday == "Weekday", 'Tues',
ifelse(Wed == 1 &
Weekday == "Weekday", 'Wed',
ifelse(Thurs ==1 &
Weekday == 'Weekday', 'Thurs',
ifelse(Fri == 1 &
Weekday == 'Weekday',
'Fri', 'Weekend'))))))
Weekday$Days_of_Week <- ordered(Weekday$Days_of_Week,
levels=c("Mon", "Tues",
"Wed", "Thurs",
"Fri", "Weekend"))
## creates a contingency table of shareshigh and whether it is a weekday
kable(prop.table(table(shareshigh$shareshigh, Weekday$Weekday)))
## creates  a contingency table of shareshigh and whether it is monday
kable(prop.table(table(Weekday$Days_of_Week, shareshigh$shareshigh)))
## mean of shares
mean(data_channel_train$shares)
## sd of shares
sd(data_channel_train$shares)
## creates a new column that is if shares is higher than average or not
shareshigh <- data_channel_train %>% select(shares) %>% mutate (shareshigh = (shares> mean(shares)))
## create a new column that combines Mon-Fri into weekdays
shareshigh <- mutate(shareshigh,
Weekday = ifelse(Mon == 1 |
Tues ==1 |
Wed == 1 |
Thurs == 1 |
Fri == 1,
'Weekday', 'Weekend'))
## mean of shares
mean(data_channel_train$shares)
## sd of shares
sd(data_channel_train$shares)
## creates a new column that is if shares is higher than average or not
shareshigh <- data_channel_train %>% mutate (shareshigh = (shares> mean(shares)))
## create a new column that combines Mon-Fri into weekdays
shareshigh <- mutate(shareshigh,
Weekday = ifelse(Mon == 1 |
Tues ==1 |
Wed == 1 |
Thurs == 1 |
Fri == 1,
'Weekday', 'Weekend'))
shareshigh <- mutate(shareshigh,
Days_of_Week = ifelse(Mon == 1 &
Weekday == 'Weekday', 'Mon',
ifelse(Tues == 1  &
Weekday == "Weekday", 'Tues',
ifelse(Wed == 1 &
Weekday == "Weekday", 'Wed',
ifelse(Thurs ==1 &
Weekday == 'Weekday', 'Thurs',
ifelse(Fri == 1 &
Weekday == 'Weekday',
'Fri', 'Weekend'))))))
shareshigh$Days_of_Week <- ordered(shareshigh$Days_of_Week,
levels=c("Mon", "Tues",
"Wed", "Thurs",
"Fri", "Weekend"))
## creates a contingency table of shareshigh and whether it is a weekday
kable(prop.table(table(shareshigh$shareshigh,
shareshigh$Weekday)))
## creates  a contingency table of shareshigh and whether it is monday
kable(prop.table(table(shareshigh$Days_of_Week, shareshigh$shareshigh)))
ggplot(shareshigh, aes(x = Weekday, fill = shareshigh)) +
geom_bar
ggplot(shareshigh, aes(x = Weekday, fill = shareshigh)) +
geom_bar()
ggplot(shareshigh, aes(x = Weekday, fill = shareshigh)) +
geom_bar(aes(y = (..count..)/sum(..count..)))
ggplot(shareshigh, aes(x = Weekday, fill = shareshigh)) +
geom_bar(aes(y = (after_stat(count))/sum(after_stat(count))))
ggplot(shareshigh, aes(x = Weekday, fill = shareshigh)) +
geom_bar(aes(y = (..count..)/sum(..count..)))
ggplot(shareshigh, aes(x = Weekday, fill = shareshigh)) +
geom_bar(aes(y = (after_stat(count))/sum(after_stat(count)))) + xlab('Weekday or Weekend?')
ggplot(shareshigh, aes(x = Weekday, fill = shareshigh)) +
geom_bar(aes(y = (after_stat(count))/sum(after_stat(count)))) + xlab('Weekday or Weekend?') +
ylab('Relative Frequency')
ggplot(shareshigh, aes(x = Days_of_Week, fill = shareshigh)) +
geom_bar(aes(y = (after_stat(count))/sum(after_stat(count)))) + xlab('Day of the Week') +
ylab('Relative Frequency')
ggplot(shareshigh, aes(x = shareshigh, fill = Days_of_Week)) +
geom_bar(aes(y = (after_stat(count))/sum(after_stat(count)))) + xlab('Day of the Week') +
ylab('Relative Frequency')
ggplot(shareshigh, aes(x = Days_of_Week, fill = shareshigh)) +
geom_bar(aes(y = (after_stat(count))/sum(after_stat(count)))) + xlab('Day of the Week') +
ylab('Relative Frequency')
## mean of shares
mean(data_channel_train$shares)
## sd of shares
sd(data_channel_train$shares)
## creates a new column that is if shares is higher than average or not
shareshigh <- data_channel_train %>% mutate (shareshigh = (shares> mean(shares)))
## create a new column that combines Mon-Fri into weekdays
shareshigh <- mutate(shareshigh,
Weekday = ifelse(Mon == 1 |
Tues ==1 |
Wed == 1 |
Thurs == 1 |
Fri == 1,
'Weekday', 'Weekend'))
shareshigh <- mutate(shareshigh,
Days_of_Week = ifelse(Mon == 1 &
Weekday == 'Weekday', 'Mon',
ifelse(Tues == 1  &
Weekday == "Weekday", 'Tues',
ifelse(Wed == 1 &
Weekday == "Weekday", 'Wed',
ifelse(Thurs ==1 &
Weekday == 'Weekday', 'Thurs',
ifelse(Fri == 1 &
Weekday == 'Weekday',
'Fri', 'Weekend'))))))
shareshigh$Days_of_Week <- ordered(shareshigh$Days_of_Week,
levels=c("Mon", "Tues",
"Wed", "Thurs",
"Fri", "Weekend"))
## creates a contingency table of shareshigh and whether it is a weekday
print(prop.table(table(shareshigh$shareshigh,
shareshigh$Weekday)))
## creates  a contingency table of shareshigh and the day of the week
print(prop.table(table(shareshigh$Days_of_Week,
shareshigh$shareshigh)))
## creates a new column that is if shares is higher than average or not
shareshigh <- data_channel_train %>% mutate (shareshigh = (shares> mean(shares)))
## create a new column that combines Mon-Fri into weekdays
shareshigh <- mutate(shareshigh,
Weekday = ifelse(Mon == 1 |
Tues ==1 |
Wed == 1 |
Thurs == 1 |
Fri == 1,
'Weekday', 'Weekend'))
shareshigh <- mutate(shareshigh,
Days_of_Week = ifelse(Mon == 1 &
Weekday == 'Weekday', 'Mon',
ifelse(Tues == 1  &
Weekday == "Weekday", 'Tues',
ifelse(Wed == 1 &
Weekday == "Weekday", 'Wed',
ifelse(Thurs ==1 &
Weekday == 'Weekday', 'Thurs',
ifelse(Fri == 1 &
Weekday == 'Weekday',
'Fri', 'Weekend'))))))
shareshigh$Days_of_Week <- ordered(shareshigh$Days_of_Week,
levels=c("Mon", "Tues",
"Wed", "Thurs",
"Fri", "Weekend"))
## creates a contingency table of shareshigh and whether it is a weekday
print(prop.table(table(shareshigh$shareshigh,
shareshigh$Weekday)))
## creates  a contingency table of shareshigh and the day of the week
print(prop.table(table(shareshigh$Days_of_Week,
shareshigh$shareshigh)))
## creates a new column that is if shares is higher than average or not
shareshigh <- data_channel_train %>% mutate (shareshigh = (shares> mean(shares)))
## create a new column that combines Mon-Fri into weekdays
shareshigh <- mutate(shareshigh,
Weekday = ifelse(Mon == 1 |
Tues ==1 |
Wed == 1 |
Thurs == 1 |
Fri == 1,
'Weekday', 'Weekend'))
shareshigh <- mutate(shareshigh,
Days_of_Week = ifelse(Mon == 1 &
Weekday == 'Weekday', 'Mon',
ifelse(Tues == 1  &
Weekday == "Weekday", 'Tues',
ifelse(Wed == 1 &
Weekday == "Weekday", 'Wed',
ifelse(Thurs ==1 &
Weekday == 'Weekday', 'Thurs',
ifelse(Fri == 1 &
Weekday == 'Weekday',
'Fri', 'Weekend'))))))
shareshigh$Days_of_Week <- ordered(shareshigh$Days_of_Week,
levels=c("Mon", "Tues",
"Wed", "Thurs",
"Fri", "Weekend"))
## creates a contingency table of shareshigh and whether it is a weekday
print(prop.table(table(shareshigh$Weekday,
shareshigh$shareshigh)))
## creates  a contingency table of shareshigh and the day of the week
print(prop.table(table(shareshigh$Days_of_Week,
shareshigh$shareshigh)))
ggplot(shareshigh, aes(x=Rate.Pos, y=Rat.Neg,
color=Days_of_Week)) +
geom_point(size=6)
ggplot(shareshigh, aes(x=Rate.Pos, y=Rate.Neg,
color=Days_of_Week)) +
geom_point(size=6)
ggplot(shareshigh, aes(x=n.Content, y=Avg.Avg.Key,
color=Days_of_Week)) +
geom_point(size=6)
ggplot(shareshigh, aes(x=n.Content, y=Avg.Avg.Key,
color=Days_of_Week)) +
geom_point(size=3)
ggplot(shareshigh, aes(x=n.Content, y=Avg.Avg.Key,
color=Weekday)) +
geom_point(size=3)
ggplot(shareshigh, aes(x=Rate.Pos, y=Rate.Neg,
color=Days_of_Week)) +
geom_point(size=2)
ggplot(data_channel_train, aes(x=n.Links)) +
geom_histogram(color="black", fill="white")
ggplot(data_channel_train, aes(x=n.Links, y = shares)) +
geom_histogram(color="black", fill="white")
ggplot(shareshigh, aes(x=n.Links, y=shares,
color=Days_of_Week)) +
geom_point(size=2)
## DELETE## This will also only knit htmls, we have to change the output to github_document and use the one at the bottom to get it to generate github documents
## creates a list of all 6 desired params from online
data_channel_is <- c("Lifestyle", "Entertainment", "Business", "Social.Media", "Tech", "World")
output_file <- paste0(data_channel_is, ".html")
#create a list for each team with just the team name parameter
params = lapply(data_channel_is, FUN = function(x){list(DataChannel = x)})
#put into a data frame
reports <- tibble(output_file, params)
## renders with params to all
apply(reports, MARGIN=1, FUN = function(x){
# rmarkdown::render("C:/Users/Demetri/Documents/NCSU_masters/ST558/Repos/GitHub/ST_558_Project_2/_Rmd/ST_558_Project_2.Rmd", output_dir = "./automations_test2_html", output_file = x[[1]], params = x[[2]]
rmarkdown::render('C:/Documents/Github/ST_558_Project_2/_Rmd/ST_558_Project_2.Rmd', output_dir = "./automations_test2_html", output_file = x[[1]], params = x[[2]]
)
}
)
set.seed(10210526)
rfFit <- train(shares ~ .,
data = data_channel_train,
method = "rf",
trControl = trainControl(method = "cv",
number = 5),
preProcess = c("center", "scale"),
mtry = ncol(data_channel_train)/3)
rfFit <- train(shares ~ .,
data = data_channel_train,
method = "rf",
trControl = trainControl(method = "cv",
number = 5),
preProcess = c("center", "scale"),
tuneGrid =
data.frame(mtry = ncol(data_channel_train)/3))
set.seed(10210526)
rfFit <- train(shares ~ .,
data = data_channel_train,
method = "rf",
n.trees = 100,
trControl = trainControl(method = "cv",
number = 5),
preProcess = c("center", "scale"),
tuneGrid =
data.frame(mtry = ncol(data_channel_train)/3))
